<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://github.com/redguava/cliniko-api/blob/master/sections/invoices.md#get-invoices -->
<template name="listInvoices" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="page"
               description="Index of the page to return when the responses are paginated."/>
    <parameter name="perPage"
               description="No. of entries to return in a page when responses are paginated."/>
    <parameter name="sort"
               description="Name of the property by which the responses will be sorted."/>
    <parameter name="order"
               description="Ascending or descending order in which the responses will be sorted."/>
    <parameter name="practitionerId"
               description="ID of the practitioner (practitioner-specific) whose invoices would be retrieved."/>
    <parameter name="patientId"
               description="ID of the patient (patient-specific) whose invoices would be retrieved."/>
    <parameter name="appointmentId"
               description="ID of the appointment (appointment-specific) whose invoices would be retrieved."/>
    <parameter name="query" description="Query to filter the response entries."/>
    <parameter name="deleted"
               description="Indicate whether to retrieve only the deleted invoices or not."/>
    <sequence>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.perPage" expression="$func:perPage"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <property name="uri.var.order" expression="$func:order"/>
        <property name="uri.var.practitionerId" expression="$func:practitionerId"/>
        <property name="uri.var.patientId" expression="$func:patientId"/>
        <property name="uri.var.appointmentId" expression="$func:appointmentId"/>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.deleted" expression="$func:deleted"/>
        <script language="js">
            <![CDATA[
            var practitionerId = mc.getProperty('uri.var.practitionerId');
            var appointmentId = mc.getProperty('uri.var.appointmentId');
            var patientId = mc.getProperty('uri.var.patientId');
            var perPage = mc.getProperty('uri.var.perPage');
            var query = mc.getProperty('uri.var.query');
            var deleted = mc.getProperty('uri.var.deleted');
            var page = mc.getProperty('uri.var.page');
            var sort = mc.getProperty('uri.var.sort');
            var order = mc.getProperty('uri.var.order');
            var urlQuery = '';
            if (page != null && page != "") {
               urlQuery += 'page=' + page + '&';
            }
            if (perPage != null && perPage != "") {
               urlQuery += 'per_page=' + perPage + '&';
            }
            if (sort != null && sort != "") {
               urlQuery += 'sort=' + sort + '&';
            }
            if (order != null && order != "") {
               urlQuery += 'order=' + order + '&';
            }
            if (query != null && query != "") {
               urlQuery += 'q=' + query + '&';
            }
            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               mc.setProperty('uri.var.urlQuery', urlQuery);
            }
            // Set the endpoint based on the parameters provided by the user
            if (appointmentId != null && appointmentId != "") {
               mc.setProperty('uri.var.endpoint', '/appointments/' + appointmentId);
            } else if (patientId != null && patientId != "") {
               mc.setProperty('uri.var.endpoint', '/patients/' + patientId);
            } else if (practitionerId != null && practitionerId != "") {
               mc.setProperty('uri.var.endpoint', '/practitioners/' + practitionerId);
            }
            // Set the endpoint leaf based on whether the user wants to retrieve only the deleted invoices or all.
            if (deleted == 'true' || deleted == 1) {
               mc.setProperty('uri.var.endpointLeaf', '/invoices/deleted');
            } else {
               mc.setProperty('uri.var.endpointLeaf', '/invoices');
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}{+uri.var.endpoint}{+uri.var.endpointLeaf}{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Status" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-Xss-Protection" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="Etag" action="remove" scope="transport"/>
        <header name="Last-Modified" action="remove" scope="transport"/>
        <header name="Location" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Via" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
    </sequence>
</template>