<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: https://github.com/redguava/cliniko-api/blob/master/sections/patients.md#create-patient -->
<template name="createPatient" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="addressLine1" description="Address line 1 of the patient."/>
    <parameter name="addressLine2" description="Address line 2 of the patient."/>
    <parameter name="addressLine3" description="Address line 3 of the patient."/>
    <parameter name="city" description="City of the patient."/>
    <parameter name="country" description="Country of the patient."/>
    <parameter name="dateOfBirth" description="Date of birth of the patient."/>
    <parameter name="email" description="Email of the patient."/>
    <parameter name="emergencyContact" description="Emergency contact number of the patient."/>
    <parameter name="firstName" description="First name of the patient."/>
    <parameter name="invoiceDefaultTo" description="Name of the invoice should be defaulted to."/>
    <parameter name="invoiceEmail" description="Email to which the invoice would be sent."/>
    <parameter name="invoiceExtraInformation"
               description="Any extra information pertaining to the invoice."/>
    <parameter name="gender" description="Gender of the patient."/>
    <parameter name="lastName" description="Last name of the patient."/>
    <parameter name="notes" description="Notes belonging to the patient."/>
    <parameter name="occupation" description="Occupation of the patient."/>
    <parameter name="oldReferenceId" description="Old rerence ID of the patient."/>
    <parameter name="postCode" description="Postal code of the patient."/>
    <parameter name="referralSource" description="Referral source of the patient."/>
    <parameter name="state" description="State of the patient."/>
    <parameter name="title" description="Title of the patient."/>
    <parameter name="patientPhoneNumbers" description="Phone number of the patient."/>
    <parameter name="label" description="Label to be added to the patient."/>
    <sequence>
        <property name="uri.var.addressLine1" expression="$func:addressLine1"/>
        <property name="uri.var.addressLine2" expression="$func:addressLine2"/>
        <property name="uri.var.addressLine3" expression="$func:addressLine3"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.dateOfBirth" expression="$func:dateOfBirth"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.emergencyContact" expression="$func:emergencyContact"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.invoiceDefaultTo" expression="$func:invoiceDefaultTo"/>
        <property name="uri.var.invoiceEmail" expression="$func:invoiceEmail"/>
        <property name="uri.var.invoiceExtraInformation"
                  expression="$func:invoiceExtraInformation"/>
        <property name="uri.var.gender" expression="$func:gender"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.notes" expression="$func:notes"/>
        <property name="uri.var.occupation" expression="$func:occupation"/>
        <property name="uri.var.oldReferenceId" expression="$func:oldReferenceId"/>
        <property name="uri.var.postCode" expression="$func:postCode"/>
        <property name="uri.var.referralSource" expression="$func:referralSource"/>
        <property name="uri.var.state" expression="$func:state"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.patientPhoneNumbers" expression="$func:patientPhoneNumbers"/>
        <property name="uri.var.label" expression="$func:label"/>
        <script language="js">
            <![CDATA[
            var country = mc.getProperty('uri.var.country');
            var lastName = mc.getProperty('uri.var.lastName');
            var notes = mc.getProperty('uri.var.notes');
            var occupation = mc.getProperty('uri.var.occupation');
            var gender = mc.getProperty('uri.var.gender');
            var city = mc.getProperty('uri.var.city');
            var emergencyContact = mc.getProperty('uri.var.emergencyContact');
            var dateOfBirth = mc.getProperty('uri.var.dateOfBirth');
            var invoiceEmail = mc.getProperty('uri.var.invoiceEmail');
            var label = mc.getProperty('uri.var.label');
            var title = mc.getProperty('uri.var.title');
            var firstName = mc.getProperty('uri.var.firstName');
            var referralSource = mc.getProperty('uri.var.referralSource');
            var invoiceExtraInformation = mc.getProperty('uri.var.invoiceExtraInformation');
            var oldReferenceId = mc.getProperty('uri.var.oldReferenceId');
            var invoiceDefaultTo = mc.getProperty('uri.var.invoiceDefaultTo');
            var addressLine1 = mc.getProperty('uri.var.addressLine1');
            var patientPhoneNumbers = mc.getProperty('uri.var.patientPhoneNumbers');
            var addressLine2 = mc.getProperty('uri.var.addressLine2');
            var postCode = mc.getProperty('uri.var.postCode');
            var addressLine3 = mc.getProperty('uri.var.addressLine3');
            var state = mc.getProperty('uri.var.state');
            var email = mc.getProperty('uri.var.email');
            var jsonPayload = {};
            if (addressLine1 != null && addressLine1 != ""){
               jsonPayload.address_1 = addressLine1;
            }
            if (addressLine2 != null && addressLine2 != ""){
               jsonPayload.address_2 = addressLine2;
            }
            if (addressLine3 != null && addressLine3 != ""){
               jsonPayload.address_3 = addressLine3;
            }
            if (city != null && city != ""){
               jsonPayload.city = city;
            }
            if (country != null && country != ""){
               jsonPayload.country = country;
            }
            if (dateOfBirth != null && dateOfBirth != ""){
               jsonPayload.date_of_birth = dateOfBirth;
            }
            if (email != null && email != ""){
               jsonPayload.email = email;
            }
            if (emergencyContact != null && emergencyContact != ""){
               jsonPayload.emergency_contact = emergencyContact;
            }
            jsonPayload.first_name = firstName;
            if (invoiceDefaultTo != null && invoiceDefaultTo != ""){
               jsonPayload.invoice_default_to = invoiceDefaultTo;
            }
            if (invoiceEmail != null && invoiceEmail != ""){
               jsonPayload.invoice_email = invoiceEmail;
            }
            if (invoiceExtraInformation != null && invoiceExtraInformation != ""){
               jsonPayload.invoice_extra_information = invoiceExtraInformation;
            }
            if (gender != null && gender != ""){
               jsonPayload.gender = gender;
            }
            jsonPayload.last_name = lastName;
            if (notes != null && notes != ""){
               jsonPayload.notes = notes;
            }
            if (occupation != null && occupation != ""){
               jsonPayload.occupation = occupation;
            }
            if (oldReferenceId != null && oldReferenceId != ""){
               jsonPayload.old_reference_id = oldReferenceId;
            }
            if (postCode != null && postCode != ""){
               jsonPayload.post_code = postCode;
            }
            if (referralSource != null && referralSource != ""){
               jsonPayload.referral_source = referralSource;
            }
            if (state != null && state != ""){
               jsonPayload.state = state;
            }
            if (title != null && title != ""){
               jsonPayload.title = title;
            }
            if (patientPhoneNumbers != null && patientPhoneNumbers != ""){
               jsonPayload.patient_phone_numbers = eval("(" + patientPhoneNumbers + ")");
            }
            if (label != null && label != ""){
               jsonPayload.label = label;
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/patients"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Status" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-Xss-Protection" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="Etag" action="remove" scope="transport"/>
        <header name="Last-Modified" action="remove" scope="transport"/>
        <header name="Location" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
        <header name="Vary" action="remove" scope="transport"/>
        <header name="Via" action="remove" scope="transport"/>
        <header name="Strict-Transport-Security" action="remove" scope="transport"/>
    </sequence>
</template>