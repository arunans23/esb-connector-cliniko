<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- This scenario creates Invoices in Billomat and create Surveys in Formstack for Cliniko Invoices-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="cliniko_createInvoicesAndSurveys" transports="https http" startOnLoad="true" trace="disable">
   <target>
      <inSequence>
         <!-- Formstack Properties -->
         <property name="formstack.apiUrl" expression="get-property('registry', 'connectors/Formstack/apiUrl')" />
         <property name="formstack.accessToken" expression="get-property('registry', 'connectors/Formstack/accessToken')" />
         <property name="formstack.templateFormId" expression="json-eval($.formstack.templateFormId)" />
         <property name="formstack.invoiceId" expression="json-eval($.formstack.invoiceIdLabel)" />
         <property name="formstack.adminEmail" expression="json-eval($.formstack.adminEmailLabel)" />
         <property name="formstack.productDetails" expression="json-eval($.formstack.productDetailsLabel)" />
         
         <!-- Cliniko Properties -->
         <property name="cliniko.apiUrl" expression="get-property('registry', 'connectors/Cliniko/apiUrl')" />
         <property name="cliniko.apiKey" expression="get-property('registry', 'connectors/Cliniko/apiKey')" />
         
         <!-- Billomat Properties -->
         <property name="billomat.apiUrl" expression="get-property('registry', 'connectors/Billomat/apiUrl')" />
         <property name="billomat.apiKey" expression="get-property('registry', 'connectors/Billomat/apiKey')" />
         
         <!-- Mandrill Properties -->
         <property name="mandrill.apiUrl" expression="get-property('registry', 'connectors/Mandrill/apiUrl')" />
         <property name="mandrill.apiKey" expression="get-property('registry', 'connectors/Mandrill/apiKey')" />
         <property name="mandrill.fromName" expression="json-eval($.mandrill.fromName)" />
         <property name="mandrill.fromEmail" expression="json-eval($.mandrill.fromEmail)" />
                   
         <property name="beetrack.routeStatus" expression="json-eval($.status)" />
         
         <!--Set the current date to issueDate parameter in Cliniko -->
         <script language="js">
          <![CDATA[
                var currentDate = new java.text.SimpleDateFormat('yyyy-MM-dd').format(new java.util.Date());
                var issueDate= 'issue_date:='+currentDate;
                mc.setProperty('cliniko.invoiceIssueDate',issueDate);
                mc.setProperty('cliniko.invoiceDate',currentDate);
            ]]>
         </script>
         
         <!--Call cliniko connector listInvoices method to list invoices issued for the current date -->
         <cliniko.init>
            <apiUrl>{$ctx:cliniko.apiUrl}</apiUrl>
            <apiKey>{$ctx:cliniko.apiKey}</apiKey>
         </cliniko.init>
         <cliniko.listInvoices>
            <query>{$ctx:cliniko.invoiceIssueDate}</query>
         </cliniko.listInvoices>
         
          <!-- START: Proceed only if the listInvoices method is successful -->
         <filter source="$axis2:HTTP_SC" regex="200">
            <then>
               <property name="invoiceIndex" expression="0" scope="operation" />
               <property name="cliniko.invoiceCount" expression="count(//invoices)" />
               
               <!-- START: Proceed only if there is at least one invoice -->
               <filter xpath="get-property('cliniko.invoiceCount') = 0.0">
                  <then>
                     <property name="id" value="{}" />
                     <property name="status" value="skipped" />
                     <property name="message" value="There are no invoices for the day" />
                     <call-template target="responseHandlerTemplate">
                        <with-param name="id" value="{$ctx:id}" />
                        <with-param name="activity" value="cliniko_listInvoices" />
                        <with-param name="status" value="{$ctx:status}" />
                        <with-param name="message" value="{$ctx:message}" />
                     </call-template>
                     <loopback />
                  </then>
                  <else>
                     <!--BEGIN : FOR EACH invoice -->
                     <iterate continueParent="false" id="invoices" expression="//invoices" sequential="true">
                        <target>
                           <sequence>
                              <property name="cliniko.invoiceId" expression="json-eval($.invoices.id)" />
                              <property name="cliniko.netAmount" expression="json-eval($.invoices.net_amount)" />
                              <property name="cliniko.patient" expression="json-eval($.invoices.patient.links.self)" />
                              <property name="cliniko.notes" expression="json-eval($.invoices.notes)" />

                               <!--Get the patient ID from the response -->
                               <script language="js">
                                  <![CDATA[
                                        var patientUrl = mc.getProperty('cliniko.patient');
                                        var patient=patientUrl.substring(patientUrl.lastIndexOf('/') + 1);
                                        mc.setProperty('cliniko.patientId',patient);
                                    ]]>
                               </script>
                               
                               <!--Call cliniko connector getPatient method to get details of a patient -->
                               <cliniko.init>
                                 <apiUrl>{$ctx:cliniko.apiUrl}</apiUrl>
                                 <apiKey>{$ctx:cliniko.apiKey}</apiKey>
                               </cliniko.init>
                              <cliniko.getPatient>
                                 <patientId>{$ctx:cliniko.patientId}</patientId>
                              </cliniko.getPatient>
                              
                               <property name="cliniko.patientId" expression="json-eval($.id)" />
                               <property name="cliniko.patientEmail" expression="json-eval($.email)" />
                               <property name="cliniko.patientFirstName" expression="json-eval($.first_name)" />
                               <property name="cliniko.patientLastName" expression="json-eval($.last_name)" />
                               <property name="cliniko.patientCity" expression="json-eval($.city)" />
                              
                               <sequence key="removeResponseHeaders" />
                              
                              <!--Extract billomat-createCompletedInvoiceSeq to create a completed invoice -->
                              <sequence key="billomat-createCompletedInvoiceSeq" />
                              
                              
                              <!--Extract formstack_createAndSendSurveySeq to create and send surveys to the patient -->
                              <sequence key="formstack_createAndSendSurveySeq" />
                              
                              <property name="invoiceIndex" expression="get-property('operation','invoiceIndex') + 1" scope="operation" />
                              <filter xpath="get-property('operation','invoiceIndex') = get-property('cliniko.invoiceCount')">
                                 <then>
                                    <loopback />
                                 </then>
                              </filter>
                           </sequence>
                        </target>
                     </iterate>
                     <!--END : FOR EACH invoice -->
                  </else>
               </filter>
                <!-- END: Proceed only if there is at least one invoice -->
            </then>
            <else>
               <property name="id" value="{}" />
               <property name="status" value="error" />
               <property name="message" expression="json-eval($.)" />
               <call-template target="responseHandlerTemplate">
                  <with-param name="id" value="{$ctx:id}" />
                  <with-param name="activity" value="cliniko_listInvoices" />
                  <with-param name="status" value="{$ctx:status}" />
                  <with-param name="message" value="{$ctx:message}" />
               </call-template>
               <loopback />
            </else>
         </filter>
         <!-- END: Proceed only if the listInvoices method is successful -->
         
      </inSequence>
      <outSequence>
         <property name="messageType" value="application/json" scope="axis2" />
         <payloadFactory media-type="json">
            <format>{
            "Response":{
               "process":"Cliniko_createInvoicesAndSurveys",
               "activityResponse":[$1]
            }
         }</format>
            <args>
               <arg expression="get-property('operation', 'responseString')" />
            </args>
         </payloadFactory>
         <send />
      </outSequence>
   </target>
   <description />
</proxy>
